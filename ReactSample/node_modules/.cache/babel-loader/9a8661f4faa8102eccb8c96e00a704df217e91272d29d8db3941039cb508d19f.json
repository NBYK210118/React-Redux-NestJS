{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { addBoard, fetchBoardsList, updateBoard } from './blogSlice';\nexport const Blog = createSlice({\n  name: 'manageBlog',\n  initialState: {\n    id: 1,\n    title: '',\n    content: '',\n    boardsList: [],\n    currentBoard: null,\n    loading: false,\n    error: ''\n  },\n  reducers: {\n    selectBoard: (state, action) => {\n      // 이미 board가 선택되어있던 경우\n      if (state.currentBoard === action.payload) {\n        state.currentBoard = null;\n        // 아무것도 선택되어 있지 않았거나 다른 board가 선택되어있던 경우\n      } else {\n        state.currentBoard = action.payload;\n      }\n    },\n    setTitle: (state, action) => {\n      state.title = action.payload;\n    },\n    setContent: (state, action) => {\n      state.content = action.payload;\n    },\n    updateBtn: (state, action) => {\n      if (state.currentBoard) {\n        state.id = state.currentBoard.id;\n        state.title = state.currentBoard.title;\n        state.description = state.currentBoard.content;\n      } else {\n        alert('변경하실 게시물을 클릭해주세요!');\n      }\n    },\n    removeBoard: (state, action) => {\n      const index = state.boardsList.findIndex(board => board.id === action.payload);\n      if (index !== -1) {\n        state.boardsList.splice(index, 1);\n      }\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchBoardsList.pending, state => {\n      state.loading = true;\n    }).addCase(fetchBoardsList.fulfilled, (state, action) => {\n      state.boardsList = action.payload;\n    }).addCase(fetchBoardsList.rejected, (state, action) => {\n      state.error = action.payload;\n      state.loading = false;\n    }).addCase(addBoard.pending, state => {\n      state.loading = true;\n    }).addCase(addBoard.fulfilled, (state, action) => {\n      state.boardsList.push(action.payload);\n      console.log(action.payload);\n    }).addCase(addBoard.rejected, (state, action) => {\n      state.error = action.payload;\n      state.loading = false;\n    }).addCase(updateBoard.pending, state => {\n      state.loading = true;\n    }).addCase(updateBoard.fulfilled, (state, action) => {\n      console.log('진행순서 extraReducer updateBoard fulfilled');\n      const index = state.boardsList.findIndex(val => val.id === action.payload.id);\n      if (index !== -1) {\n        state.boardsList[index] = action.payload;\n      }\n    }).addCase(updateBoard.rejected, (state, action) => {\n      state.error = action.payload;\n      state.loading = false;\n    });\n  }\n});\nexport const {\n  setTitle,\n  setContent,\n  updateBtn,\n  removeBoard,\n  selectBoard\n} = Blog.actions;\nexport default Blog.reducer;","map":{"version":3,"names":["createSlice","addBoard","fetchBoardsList","updateBoard","Blog","name","initialState","id","title","content","boardsList","currentBoard","loading","error","reducers","selectBoard","state","action","payload","setTitle","setContent","updateBtn","description","alert","removeBoard","index","findIndex","board","splice","extraReducers","builder","addCase","pending","fulfilled","rejected","push","console","log","val","actions","reducer"],"sources":["C:/Users/user/OneDrive/바탕 화면/board-app2/ReactSample/src/features/blog/manageBlog.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\nimport { addBoard, fetchBoardsList, updateBoard } from './blogSlice';\r\n\r\nexport const Blog = createSlice({\r\n  name: 'manageBlog',\r\n  initialState: {\r\n    id: 1,\r\n    title: '',\r\n    content: '',\r\n    boardsList: [],\r\n    currentBoard: null,\r\n    loading: false,\r\n    error: '',\r\n  },\r\n  reducers: {\r\n    selectBoard: (state, action) => {\r\n      // 이미 board가 선택되어있던 경우\r\n      if (state.currentBoard === action.payload) {\r\n        state.currentBoard = null;\r\n        // 아무것도 선택되어 있지 않았거나 다른 board가 선택되어있던 경우\r\n      } else {\r\n        state.currentBoard = action.payload;\r\n      }\r\n    },\r\n    setTitle: (state, action) => {\r\n      state.title = action.payload;\r\n    },\r\n    setContent: (state, action) => {\r\n      state.content = action.payload;\r\n    },\r\n    updateBtn: (state, action) => {\r\n      if (state.currentBoard) {\r\n        state.id = state.currentBoard.id;\r\n        state.title = state.currentBoard.title;\r\n        state.description = state.currentBoard.content;\r\n      } else {\r\n        alert('변경하실 게시물을 클릭해주세요!');\r\n      }\r\n    },\r\n    removeBoard: (state, action) => {\r\n      const index = state.boardsList.findIndex((board) => board.id === action.payload);\r\n      if (index !== -1) {\r\n        state.boardsList.splice(index, 1);\r\n      }\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(fetchBoardsList.pending, (state) => {\r\n        state.loading = true;\r\n      })\r\n      .addCase(fetchBoardsList.fulfilled, (state, action) => {\r\n        state.boardsList = action.payload;\r\n      })\r\n      .addCase(fetchBoardsList.rejected, (state, action) => {\r\n        state.error = action.payload;\r\n        state.loading = false;\r\n      })\r\n      .addCase(addBoard.pending, (state) => {\r\n        state.loading = true;\r\n      })\r\n      .addCase(addBoard.fulfilled, (state, action) => {\r\n        state.boardsList.push(action.payload);\r\n        console.log(action.payload);\r\n      })\r\n      .addCase(addBoard.rejected, (state, action) => {\r\n        state.error = action.payload;\r\n        state.loading = false;\r\n      })\r\n      .addCase(updateBoard.pending, (state) => {\r\n        state.loading = true;\r\n      })\r\n      .addCase(updateBoard.fulfilled, (state, action) => {\r\n        console.log('진행순서 extraReducer updateBoard fulfilled');\r\n        const index = state.boardsList.findIndex((val) => val.id === action.payload.id);\r\n        if (index !== -1) {\r\n          state.boardsList[index] = action.payload;\r\n        }\r\n      })\r\n      .addCase(updateBoard.rejected, (state, action) => {\r\n        state.error = action.payload;\r\n        state.loading = false;\r\n      });\r\n  },\r\n});\r\n\r\nexport const { setTitle, setContent, updateBtn, removeBoard, selectBoard } = Blog.actions;\r\n\r\nexport default Blog.reducer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}