{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { fetchBoardsList } from './blogSlice';\nexport const Blog = createSlice({\n  name: 'manageBlog',\n  initialState: {\n    id: 1,\n    title: '',\n    description: '',\n    boardsList: [],\n    currentBoard: null,\n    loading: false,\n    error: ''\n  },\n  reducers: {\n    selectBoard: (state, action) => {\n      // 이미 board가 선택되어있던 경우\n      if (state.currentBoard === action.payload) {\n        state.currentBoard = null;\n        // 아무것도 선택되어 있지 않았거나 다른 board가 선택되어있던 경우\n      } else {\n        state.currentBoard = action.payload;\n      }\n    },\n    updateBtn: (state, action) => {\n      if (state.currentBoard) {\n        state.id = state.currentBoard.id;\n        state.title = state.currentBoard.title;\n        state.description = state.currentBoard.description;\n      } else {\n        alert('변경하실 게시물을 클릭해주세요!');\n      }\n    },\n    updateBoard: (state, action) => {\n      const {\n        id,\n        title,\n        description\n      } = action.payload;\n      const index = state.boardsList.findIndex(val => val.id === id);\n      if (index !== -1) {\n        state.boardsList[index] = {\n          ...state.boardsList[index],\n          title,\n          description\n        };\n      }\n    },\n    removeBoard: (state, action) => {\n      const index = state.boardsList.findIndex(board => board.id === action.payload);\n      if (index !== -1) {\n        state.boardsList.splice(index, 1);\n      }\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchBoardsList.pending, state => {\n      state.loading = true;\n    }).addCase(fetchBoardsList.fulfilled, (state, action) => {\n      state.boardsList = action.payload;\n    }).addCase(fetchBoardsList.rejected, (state, action) => {\n      state.error = action.payload;\n    });\n    builder.addCase(addBoard);\n  }\n});\nexport const {\n  addBoard,\n  updateBtn,\n  updateBoard,\n  removeBoard,\n  selectBoard\n} = Blog.actions;\nexport default Blog.reducer;","map":{"version":3,"names":["createSlice","fetchBoardsList","Blog","name","initialState","id","title","description","boardsList","currentBoard","loading","error","reducers","selectBoard","state","action","payload","updateBtn","alert","updateBoard","index","findIndex","val","removeBoard","board","splice","extraReducers","builder","addCase","pending","fulfilled","rejected","addBoard","actions","reducer"],"sources":["C:/Users/user/OneDrive/바탕 화면/board-app2/ReactSample/src/features/blog/manageBlog.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\nimport { fetchBoardsList } from './blogSlice';\r\n\r\nexport const Blog = createSlice({\r\n  name: 'manageBlog',\r\n  initialState: {\r\n    id: 1,\r\n    title: '',\r\n    description: '',\r\n    boardsList: [],\r\n    currentBoard: null,\r\n    loading: false,\r\n    error: '',\r\n  },\r\n  reducers: {\r\n    selectBoard: (state, action) => {\r\n      // 이미 board가 선택되어있던 경우\r\n      if (state.currentBoard === action.payload) {\r\n        state.currentBoard = null;\r\n        // 아무것도 선택되어 있지 않았거나 다른 board가 선택되어있던 경우\r\n      } else {\r\n        state.currentBoard = action.payload;\r\n      }\r\n    },\r\n    updateBtn: (state, action) => {\r\n      if (state.currentBoard) {\r\n        state.id = state.currentBoard.id;\r\n        state.title = state.currentBoard.title;\r\n        state.description = state.currentBoard.description;\r\n      } else {\r\n        alert('변경하실 게시물을 클릭해주세요!');\r\n      }\r\n    },\r\n    updateBoard: (state, action) => {\r\n      const { id, title, description } = action.payload;\r\n      const index = state.boardsList.findIndex((val) => val.id === id);\r\n      if (index !== -1) {\r\n        state.boardsList[index] = { ...state.boardsList[index], title, description };\r\n      }\r\n    },\r\n    removeBoard: (state, action) => {\r\n      const index = state.boardsList.findIndex((board) => board.id === action.payload);\r\n      if (index !== -1) {\r\n        state.boardsList.splice(index, 1);\r\n      }\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(fetchBoardsList.pending, (state) => {\r\n        state.loading = true;\r\n      })\r\n      .addCase(fetchBoardsList.fulfilled, (state, action) => {\r\n        state.boardsList = action.payload;\r\n      })\r\n      .addCase(fetchBoardsList.rejected, (state, action) => {\r\n        state.error = action.payload;\r\n      });\r\n\r\n    builder.addCase(addBoard);\r\n  },\r\n});\r\n\r\nexport const { addBoard, updateBtn, updateBoard, removeBoard, selectBoard } = Blog.actions;\r\n\r\nexport default Blog.reducer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}